For the time being we use the following python version:

/opt/asani/apache/bin/python

is Python2.5.4 with Django 1.1

###############################################
Database connection
###############################################

Database access is done through psycopg2 compiled with kerberos
authentication. The PostgreSQL 8.3.7 database lives on bosshog.arc.nasa.gov.

Currently, any user accessing the "pds_pc" (PDS Planetary Content Group) database
needs to have a special permission from SG (email SG).

Hopefully, we can get an underpriviledged read access to the database using
a simple password method!!!

This is the response from SG:
"""
Yes there is a way to connect using a regular password with a service account that
is not tied to any user.  In that case we just setup a credentials file which
contains the password which only the web server (or in the case of django app, the
wsgi daemon user) can read.  Once you're ready to create a web app, please let me
know and I'll get all the standard django stuff running for you.  You should
probably open up a new ticket for that, this one has gotten huge :)
"""

###############################################
invoke django shell
###############################################

>>> /opt/asani/apache/bin/python manage.py shell

###############################################
manually handling the Postgres database
###############################################

1.) use "kinit" for the kerberos authentication

2.) /usr/bin/psql -h bosshog -d pds_pc 

Show column:
 \d pds_product
 
 '\?' for all commands '\h' for database actions

###############################################
module SimpleParser
###############################################

SimpleParse is installed in a custom location, via
/opt/asani/apache/bin/python setup.py install --home=~/python

the resulting search path needs to be augmented by

sys.path.insert(0, os.path.abspath('~/python/lib64'))

###############################################
jython and building war files
###############################################

1.) installing jython, django 1.1, django-jython

2.) modifying django-jython

modifying line 54 in 'doj/backends/zxjdbc/postgresql/basy.py'

        self.client = DatabaseClient(self)

3.) modifying django

add in 'django/contrib/gis/db/backend/__init__.py'

if settings.DATABASE_ENGINE == 'doj.backends.zxjdbc.postgresql':
    from django.contrib.gis.db.backend.postgis import create_test_spatial_db, get_geo_where_clause, SpatialBackend

