# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2


_ACKRESPONSE_ACKSTATE = descriptor.EnumDescriptor(
  name='AckState',
  full_name='AckResponse.AckState',
  filename='AckState',
  values=[
    descriptor.EnumValueDescriptor(
      name='ACK', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='NOACK', index=1, number=1,
      options=None,
      type=None),
  ],
  options=None,
)


_COMMAND = descriptor.Descriptor(
  name='Command',
  full_name='Command',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='uuid', full_name='Command.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='command', full_name='Command.command', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='args', full_name='Command.args', index=2,
      number=3, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_JOBSTATUS = descriptor.Descriptor(
  name='JobStatus',
  full_name='JobStatus',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='job_id', full_name='JobStatus.job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='state', full_name='JobStatus.state', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reaper_id', full_name='JobStatus.reaper_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='output', full_name='JobStatus.output', index=3,
      number=4, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_RPCREQUESTWRAPPER = descriptor.Descriptor(
  name='RpcRequestWrapper',
  full_name='RpcRequestWrapper',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='requestor', full_name='RpcRequestWrapper.requestor', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='method', full_name='RpcRequestWrapper.method', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='payload', full_name='RpcRequestWrapper.payload', index=2,
      number=3, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_RPCRESPONSEWRAPPER = descriptor.Descriptor(
  name='RpcResponseWrapper',
  full_name='RpcResponseWrapper',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='payload', full_name='RpcResponseWrapper.payload', index=0,
      number=1, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='error', full_name='RpcResponseWrapper.error', index=1,
      number=2, type=8, cpp_type=7, label=2,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='error_string', full_name='RpcResponseWrapper.error_string', index=2,
      number=3, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ACKRESPONSE = descriptor.Descriptor(
  name='AckResponse',
  full_name='AckResponse',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='ack', full_name='AckResponse.ack', index=0,
      number=1, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _ACKRESPONSE_ACKSTATE,
  ],
  options=None)


_REAPERREGISTRATIONREQUEST = descriptor.Descriptor(
  name='ReaperRegistrationRequest',
  full_name='ReaperRegistrationRequest',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='reaper_uuid', full_name='ReaperRegistrationRequest.reaper_uuid', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reaper_type', full_name='ReaperRegistrationRequest.reaper_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("generic", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REAPERUNREGISTRATIONREQUEST = descriptor.Descriptor(
  name='ReaperUnregistrationRequest',
  full_name='ReaperUnregistrationRequest',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='reaper_uuid', full_name='ReaperUnregistrationRequest.reaper_uuid', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REAPERJOBREQUEST = descriptor.Descriptor(
  name='ReaperJobRequest',
  full_name='ReaperJobRequest',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='allowed_commands', full_name='ReaperJobRequest.allowed_commands', index=0,
      number=1, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REAPERJOBRESPONSE = descriptor.Descriptor(
  name='ReaperJobResponse',
  full_name='ReaperJobResponse',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='job_available', full_name='ReaperJobResponse.job_available', index=0,
      number=1, type=8, cpp_type=7, label=2,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='uuid', full_name='ReaperJobResponse.uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='command', full_name='ReaperJobResponse.command', index=2,
      number=3, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='args', full_name='ReaperJobResponse.args', index=3,
      number=4, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REAPERCOMMANDREQUEST = descriptor.Descriptor(
  name='ReaperCommandRequest',
  full_name='ReaperCommandRequest',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='reaper_uuid', full_name='ReaperCommandRequest.reaper_uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='command', full_name='ReaperCommandRequest.command', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='args', full_name='ReaperCommandRequest.args', index=2,
      number=3, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REAPERSTATUSREQUEST = descriptor.Descriptor(
  name='ReaperStatusRequest',
  full_name='ReaperStatusRequest',
  filename='protocols.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REAPERSTATUSRESPONSE = descriptor.Descriptor(
  name='ReaperStatusResponse',
  full_name='ReaperStatusResponse',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='status', full_name='ReaperStatusResponse.status', index=0,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ECHOMESSAGE = descriptor.Descriptor(
  name='EchoMessage',
  full_name='EchoMessage',
  filename='protocols.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='echotext', full_name='EchoMessage.echotext', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ACKRESPONSE.fields_by_name['ack'].enum_type = _ACKRESPONSE_ACKSTATE

class Command(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _COMMAND

class JobStatus(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _JOBSTATUS

class RpcRequestWrapper(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _RPCREQUESTWRAPPER

class RpcResponseWrapper(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _RPCRESPONSEWRAPPER

class AckResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ACKRESPONSE

class ReaperRegistrationRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERREGISTRATIONREQUEST

class ReaperUnregistrationRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERUNREGISTRATIONREQUEST

class ReaperJobRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERJOBREQUEST

class ReaperJobResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERJOBRESPONSE

class ReaperCommandRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERCOMMANDREQUEST

class ReaperStatusRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERSTATUSREQUEST

class ReaperStatusResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REAPERSTATUSRESPONSE

class EchoMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ECHOMESSAGE


_DISPATCHCOMMANDSERVICE = descriptor.ServiceDescriptor(
  name='DispatchCommandService',
  full_name='DispatchCommandService',
  index=0,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='registerReaper',
    full_name='DispatchCommandService.registerReaper',
    index=0,
    containing_service=None,
    input_type=_REAPERREGISTRATIONREQUEST,
    output_type=_ACKRESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='unregisterReaper',
    full_name='DispatchCommandService.unregisterReaper',
    index=1,
    containing_service=None,
    input_type=_REAPERUNREGISTRATIONREQUEST,
    output_type=_ACKRESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='getJob',
    full_name='DispatchCommandService.getJob',
    index=2,
    containing_service=None,
    input_type=_REAPERJOBREQUEST,
    output_type=_REAPERJOBRESPONSE,
    options=None,
  ),
])

class DispatchCommandService(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _DISPATCHCOMMANDSERVICE
class DispatchCommandService_Stub(DispatchCommandService):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _DISPATCHCOMMANDSERVICE


_REAPERCOMMANDSERVICE = descriptor.ServiceDescriptor(
  name='ReaperCommandService',
  full_name='ReaperCommandService',
  index=1,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='GetStatus',
    full_name='ReaperCommandService.GetStatus',
    index=0,
    containing_service=None,
    input_type=_REAPERSTATUSREQUEST,
    output_type=_REAPERSTATUSRESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='Echo',
    full_name='ReaperCommandService.Echo',
    index=1,
    containing_service=None,
    input_type=_ECHOMESSAGE,
    output_type=_ECHOMESSAGE,
    options=None,
  ),
])

class ReaperCommandService(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _REAPERCOMMANDSERVICE
class ReaperCommandService_Stub(ReaperCommandService):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _REAPERCOMMANDSERVICE


_TESTSERVICE = descriptor.ServiceDescriptor(
  name='TestService',
  full_name='TestService',
  index=2,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='Echo',
    full_name='TestService.Echo',
    index=0,
    containing_service=None,
    input_type=_ECHOMESSAGE,
    output_type=_ECHOMESSAGE,
    options=None,
  ),
])

class TestService(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _TESTSERVICE
class TestService_Stub(TestService):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _TESTSERVICE

